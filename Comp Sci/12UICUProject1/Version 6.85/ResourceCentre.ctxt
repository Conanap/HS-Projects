#BlueJ class context
comment0.params=imHP
comment0.target=ResourceCentre(int)
comment0.text=\n\ Constructing\ a\ new\ health\ bar.\ No\ parameters,\ \ automatically\ defaults\ maximum\ HP\ and\ manna\ to\ 100.\n
comment1.params=
comment1.target=void\ base()
comment1.text=\n\ This\ method\ draws\ and\ sets\ the\ basics\ of\ the\ health\ bar.\ Cannot\ be\ accessed\ outside\ of\ the\ class.\n
comment10.params=
comment10.target=void\ checkZombies()
comment11.params=
comment11.target=double\ getWood()
comment12.params=
comment12.target=double\ getFood()
comment13.params=
comment13.target=double\ getWater()
comment14.params=
comment14.target=double\ getHealth()
comment2.params=
comment2.target=void\ act()
comment3.params=damage\ inwd\ infd\ inwt
comment3.target=void\ update(double,\ int,\ int,\ int)
comment3.text=\n\ Updating\ the\ health\ bars.\ Must\ be\ called\ every\ time\ you\ want\ to\ change\ the\ amount\ of\ HP.\n\ @param\ damage\ If\ 0,\ no\ change;\ damage\ changes\ with\ the\ integer\ inputted\ \n\ @param\ inwd\ Change\ to\ wood.\ If\ 0,\ no\ change;\ if\ 1,\ resupplies\ wood\ (when\ crate\ is\ picked\ up);\ if\ 2,\ wood\ is\ consumed\ (call\ from\ creating\ barricade)\n\ @param\ infd\ Chagne\ to\ food.\ If\ 0,\ '';\ if\ 1,\ resupplies\ food(crate\ pick\ up);\ if\ 2,\ food\ consumed\ (call\ from\ act()\ in\ human)\n\ @param\ inwt\ Change\ to\ water.\ If\ 0,\ '';\ if\ 1,\ resupplies\ water(crate);if\ 2,\ water\ consumed\ (call\ from\ act()\ in\ human)\n
comment4.params=
comment4.target=boolean\ checkAlive()
comment4.text=\n\ Check\ if\ its\ alive\n\ @return\ boolean\ If\ true,\ the\ world\ is\ still\ alive,\ else\ game\ over.\n
comment5.params=
comment5.target=void\ drawHealth()
comment6.params=
comment6.target=void\ drawIdent()
comment6.text=\n\ checkMax();//calls\ method\ checkMax()\ to\ confirm\ that\ the\ current\ hp\ and\ manna\ is\ not\ over\ max\ hp\ and\ manna\n\ \ \ \ double\ percent\ \=\ currentHP/maxHP;//determining\ percent\ of\ HP\ object\ has\n\ \ \ \ //int\ diameter2\ \=\ (int)\ diameter;\n\ \ \ \ detColor(percent);//calling\ method\ detColor()\ with\ the\ percent\ of\ health\ to\ determine\ what\ color\ the\ items\ should\ be\n\ \ \ \ healthLength\=(int)\ (percent*130);//finding\ how\ long\ the\ blue\ overlay\ bar\ should\ be\n\ \ \ \ bar.fillRect(5,5,healthLength,10);//filling\ in\ the\ amount\ of\ manna\ the\ object\ has\n
comment7.params=percent
comment7.target=void\ detColor(double)
comment7.text=\n\ Private\ method,\ cannot\ be\ accessed\ outside\ of\ class.\ Determines\ the\ color\ of\ the\ smaller\ circle\ and\ status\ box.\n\ If\ you\ don't\ like\ the\ colors\ you\ can\ change\ the\ parameters\ here\n
comment8.params=
comment8.target=void\ checkMax()
comment8.text=\n\ Private\ method,\ to\ prevent\ the\ circle\ from\ being\ larger\ than\ intended\ (max\ diameter)\ or\ having\ negative\ numbers,\ which\ will\ cause\ delays\ and\ inaccurate\ display\ of\n\ health\ and\ status.\ The\ same\ is\ true\ for\ numbers\ larger\ than\ max\ HP\ or\ max\ Manna\ possible.\n
comment9.params=damage\ inwd\ infd\ inwt
comment9.target=void\ change(double,\ int,\ int,\ int)
numComments=15
