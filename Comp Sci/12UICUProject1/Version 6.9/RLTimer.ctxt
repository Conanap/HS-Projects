#BlueJ class context
comment0.params=mxTime
comment0.target=RLTimer(int)
comment0.text=\r\n\ RLTimer\ Base\ constructor;\ time\ starts\ at\ entered\ max\ amount,\ and\ can\ never\ exceed\ this\ amount.\r\n\r\n\ @param\ mxTime\ Sets\ the\ maximum\ time\ for\ the\ timer\r\n
comment1.params=mxTime\ crTime
comment1.target=RLTimer(int,\ int)
comment1.text=\r\n\ RLTimer\ Constructor\ that\ sets\ both\ the\ max\ and\ starting\ times.\r\n\ <p>\r\n\ Intended\ for\ situations\ where\ time\ can\ be\ increased\ to\ amounts\ higher\ than\ what\ the\ timer\ started\ with,\r\n\ such\ as\ a\ game\ with\ many\ time\ power-ups.\r\n\r\n\ @param\ mxTime\ Sets\ the\ maximum\ time\ for\ the\ timer\r\n\ @param\ crTime\ Sets\ the\ starting\ time\ for\ the\ timer\r\n
comment10.params=decTime
comment10.target=void\ decreaseTime(int)
comment10.text=\r\n\ Decreases\ current\ time\ by\ entered\ amount,\ but\ not\ to\ less\ than\ 0;\ time\ defaults\ to\ zero\ if\ total\ is\ negative.\r\n\ @param\ addTime\ Amount\ to\ decrease\r\n
comment11.params=newAPS
comment11.target=void\ setAPS(int)
comment11.text=\r\n\ Changes\ Acts\ Per\ Second\ count;\ scale\ according\ to\ how\ the\ speed\ is\ set\ for\ the\ program.\r\n\ Allows\ for\ a\ more\ accurate\ time\ counter-\ \r\n\ defaulted\ to\ 60\ for\ base\ speed\ (middle\ preset).\r\n
comment12.params=
comment12.target=void\ resetTime()
comment12.text=\r\n\ Sets\ current\ time\ back\ to\ the\ maximum.\ Easy\ and\ quick\ way\ to\ reset\ the\ timer\ without\ needing\ to\ input\ an\ interger.\r\n
comment13.params=
comment13.target=int\ returnTime()
comment13.text=\r\n\ Returns\ the\ time\ remaining.\ Use\ in\ another\ object\ or\ the\ world\ to\ trigger\ events\r\n\ that\ occur\ once\ the\ timer\ hits\ zero\ or\ another\ set\ time.\r\n
comment2.params=mxTime\ crTime\ aps
comment2.target=RLTimer(int,\ int,\ int)
comment2.text=\r\n\ RLTimer\ Constructor\ that\ sets\ max\ and\ starting\ times,\ as\ well\ as\ the\ required\ number\ of\ acts\ per\ second.\r\n\ <p>\r\n\ Intended\ for\ programs\ that\ runs\ at\ a\ defined\ (not\ default)\ speed.\r\n\r\n\ @param\ mxTime\ Sets\ the\ maximum\ time\ for\ the\ timer\r\n\ @param\ crTime\ Sets\ the\ starting\ time\ for\ the\ timer\r\n\ @param\ aps\ Sets\ the\ number\ of\ actions\ needed\ for\ one\ second\ to\ pass;\ varies\ depending\ on\ program\ speed\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Runs\ the\ timer.\r\n
comment4.params=
comment4.target=void\ countDown()
comment4.text=\r\n\ Subtracts\ a\ second\ from\ curTime\ everytime\ the\ set\ number\ of\ acts\ is\ reached,\ and\ then\ runs\ updateDisplay()\ \r\n\ to\ update\ the\ image.\r\n\ <p>\r\n\ Runs\ timeEndDisplay()\ once\ time\ hits\ zero\r\n
comment5.params=
comment5.target=void\ updateDisplay()
comment5.text=\r\n\ Updates\ the\ size\ and\ text\ of\ the\ bar\ based\ off\ the\ amount\ of\ time\ left\ in\ comparison\ to\ the\ maximum\ amount.\r\n\r\n
comment6.params=
comment6.target=void\ timeEndDisplay()
comment6.text=\r\n\ Display\ shown\ when\ timer\ hits\ zero.\ Flashes\ ending\ message\ in\ two\ alternating\ colors.\r\n\ <p>\r\n\ Preset\ message\ is\ "Times\ Up\!"\r\n
comment7.params=newTime
comment7.target=void\ setTime(int)
comment7.text=\r\n\ Changes\ time\ to\ set\ amount.\ Amount\ defaults\ to\ maxTime\ if\ entered\ amount\ exceeds\ it,\ and\ defaults\ to\ 0\ if\ amount\ is\ negative.\r\n\ @param\ newTime\ Desired\ time\r\n
comment8.params=newTime\ newMax
comment8.target=void\ setTime(int,\ int)
comment8.text=\r\n\ Sets\ both\ the\ maximum\ time\ and\ the\ current\ time.\r\n\ <p>\r\n\ Useful\ for\ situations\ such\ as\ new\ levels\ where\ more\ time\ is\ allotted.\r\n\ @param\ newTime\ Desired\ time\r\n\ @param\ newMax\ Desired\ max\ time\ limit\r\n
comment9.params=addTime
comment9.target=void\ increaseTime(int)
comment9.text=\r\n\ Increases\ current\ time\ by\ entered\ amount,\ but\ not\ more\ than\ the\ set\ maximum;\ time\ defaults\ to\ max\ if\ total\ exceeds\ it.\r\n\ @param\ addTime\ Amount\ to\ add\r\n
numComments=14
